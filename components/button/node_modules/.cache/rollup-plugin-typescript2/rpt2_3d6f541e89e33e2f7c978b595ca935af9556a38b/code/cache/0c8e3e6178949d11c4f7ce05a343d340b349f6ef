{"code":"import React from \"react\";\r\nconst HeadlessButton = (props) => {\r\n    return (React.createElement(\"button\", { type: props.type, disabled: props.disabled || props.busy, className: props.className, onClick: props.onClick, onMouseEnter: props.onMouseEnter, onMouseLeave: props.onMouseLeave, onFocus: props.onFocus, onBlur: props.onBlur }, props.busy ? props.busyText : props.children));\r\n};\r\nHeadlessButton.defaultProps = {\r\n    busyText: \"Loading...\",\r\n    disabled: false,\r\n    busy: false,\r\n    type: \"button\",\r\n};\r\nexport default HeadlessButton;\r\n","references":["/Users/betalectic/Desktop/ReuseJSV2/reusejs-react-v2/node_modules/@types/react/ts5.0/index.d.ts"],"dts":{"name":"/Users/betalectic/Desktop/ReuseJSV2/reusejs-react-v2/components/button/dist/types/src/HeadlessButton.d.ts","writeByteOrderMark":false,"text":"import React, { FC } from \"react\";\r\nexport interface HeadlessButtonProps {\r\n    children: React.ReactNode;\r\n    onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n    className?: string;\r\n    busy?: boolean;\r\n    busyText?: React.ReactNode;\r\n    disabled?: boolean;\r\n    type?: \"submit\" | \"reset\" | \"button\";\r\n    onFocus?: (e: React.FocusEvent<HTMLButtonElement, Element>) => void;\r\n    onBlur?: (e: React.FocusEvent<HTMLButtonElement, Element>) => void;\r\n    onMouseEnter?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n    onMouseLeave?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}\r\ndeclare const HeadlessButton: FC<HeadlessButtonProps>;\r\nexport default HeadlessButton;\r\n"}}
