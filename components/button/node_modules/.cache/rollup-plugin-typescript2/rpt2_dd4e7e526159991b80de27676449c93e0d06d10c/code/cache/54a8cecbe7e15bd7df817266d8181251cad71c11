{"code":"import React from \"react\";\nconst HeadlessButton = (props) => {\n    return (React.createElement(\"button\", { type: props.type, disabled: props.disabled || props.busy, className: props.className, onClick: props.onClick, onMouseEnter: props.onMouseEnter, onMouseLeave: props.onMouseLeave, onFocus: props.onFocus, onBlur: props.onBlur, style: props.styles }, props.busy ? props.busyText : props.children));\n};\nHeadlessButton.defaultProps = {\n    busyText: \"Loading...\",\n    disabled: false,\n    busy: false,\n    type: \"button\",\n};\nexport default HeadlessButton;\n","references":["/Users/betalectic/Desktop/ReuseJSV2/reusejs-react-v2/node_modules/@types/react/ts5.0/index.d.ts"],"dts":{"name":"/Users/betalectic/Desktop/ReuseJSV2/reusejs-react-v2/components/button/dist/types/src/HeadlessButton.d.ts","writeByteOrderMark":false,"text":"import React, { FC } from \"react\";\nexport interface HeadlessButtonProps {\n    children: React.ReactNode;\n    onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    className?: string;\n    busy?: boolean;\n    busyText?: React.ReactNode;\n    disabled?: boolean;\n    type?: \"submit\" | \"reset\" | \"button\";\n    onFocus?: (e: React.FocusEvent<HTMLButtonElement, Element>) => void;\n    onBlur?: (e: React.FocusEvent<HTMLButtonElement, Element>) => void;\n    onMouseEnter?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    onMouseLeave?: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n    styles?: any;\n}\ndeclare const HeadlessButton: FC<HeadlessButtonProps>;\nexport default HeadlessButton;\n"}}
